version: "3.8"

services: 
  # db:
  #   #command: docker run -it --rm mysql mysql -h 127.0.0.1 -p 3306 --user=root --password=root influenceurbusiness
  #   image: mysql:8.0
  #   cap_add:
  #     - SYS_NICE
  #   restart: always
  #   environment:
  #     MYSQL_DATABASE: 'influenceurbusiness'
  #     MYSQL_ROOT_PASSWORD: 'root'
  #   ports: 
  #     # <Port exposed> : < MySQL Port running inside container>
  #     - '3306:3306'
  #   networks:
  #     - shared-network
  #   expose:
  #     # Opens port 3306 on the container
  #     - '3306'
  #   # Where our data will be persisted
  #   volumes:
  #     - db:/var/lib/mysql
  #     - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql

  back:
    container_name: influenceurbusiness_api
    restart: unless-stopped 
    image: influenceurbusiness_api-prod:1.0.0
    build: 
      context: back
      target: back
      dockerfile: Dockerfile 
    ports: 
      - 3000:3000 
    expose: 
      - '3000'
    networks: 
      - shared-network
    # depends_on:
    #   #should wait for the db to be launched before lauching the api 
    #   - db  
  front:
    container_name: influenceurbusiness_front
    restart: unless-stopped 
    image: influenceurbusiness_front-prod:1.0.0
    build: 
      context: front
      target: front
      dockerfile: Dockerfile 
    ports: 
      - 5000:5000 
    expose:
      - '5000'
    networks: 
      - shared-network
    depends_on:
      #should wait for the api to be launched before lauching the client 
      - back  

networks:
  shared-network:  

volumes: 
  #db:
  front:
  back: